
process {

    // set default publishing 
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0]}" },
        mode: params.output_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    withName: VG_CONSTRUCT {
        ext.args = '-C -a'
    }
    withName: VG_INDEX {
        ext.args = '-L'
    }
    withName: VG_FILTER {
        ext.args = { [
            params.min_primary_score ? "-r ${params.min_primary_score}" : '',
            params.norm_based_on_length ? '-f' : '',
            params.use_sub_counts ? '-u' : '',
            params.min_end_matches ? "-m ${params.min_end_matches}" : '',
            params.min_map_qual ? "-q ${params.min_map_qual}" : '',
            params.defray_ends ? "-D ${params.defray_ends}" : ''
        ].join(' ').trim() }
    }
    withName: VG_PACK {
        ext.args = { [ 
            params.min_mapping_quality ? "-Q ${params.min_mapping_quality}" : '',
            params.ignore_first_last_bps ? "-s ${params.ignore_first_last_bps}" : '',
            params.expected_coverage ? "-c ${params.expected_coverage}" : ''
        ].join(' ').trim() }
    }
    withName: VG_CALL {
        ext.args = '-a'
    }
    withName: BCFTOOLS_INDEX {
        ext.args = { [
            params.enable_tbi ? '-t' : ''
        ].join(' ').trim() }
    }
    withName: BCFTOOLS_REHEADER {
        ext.args = '-s new_sample_name.txt'
        ext.args2 = '--output-type z'
    }
    withName: BCFTOOLS_MERGE {
        ext.args = '-Oz'
        publishDir = [
            path: { "${params.outdir}/BCFTOOLS/MERGE" },
            mode: params.output_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: VG_PATHS {
        ext.args = '-F'
        publishDir = [
            path: { "${params.outdir}/VG/PATH" },
            mode: params.output_mode,
            saveAs : { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'TABIX_TABIX.*' {
        ext.args = '-p vcf'
        publishDir = [
            path: { "${params.outdir}/TABIX/TABIX" },
            mode: params.output_mode,
            saveAs : { filename -> filename.equals('versions.yml') ? null : filename }    
        ]
    }
    withName: 'TABIX_SUBSET' {
        ext.args = '-h'

    }
    withName: BCFTOOLS_NORM {
        ext.args = { [
            params.atomize_variants ? "-a" : '',
            params.split_multiallelic ? "-m ${params.split_multiallelic}" : '',
            params.check_reference_alleles ? "--check-ref ${params.check_reference_alleles}" : ''
        ].join(' ').trim() }
        publishDir = [
            [
                path: { "${params.outdir}/BCFTOOLS/NORM" },
                mode: params.output_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: ""
            ]
        ]
    }
    withName: VG_STATS {
        ext.args = ''
        publishDir = [
            [
                path: { "${params.outdir}/STATS" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*.stats"
            ]
        ]        
    }
    withName: FILTER1 {
        ext.args = "--output-type z"
        publishDir = [
            [
                path: { "${params.outdir}/variant_calling/filter" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*.vcf.gz"
            ]
        ]
    }
    withName: RADSEQ_FILTERS_1 {
        ext.args_fmiss     = params.fraction_genotypes_missing
        ext.args_mac       = params.minor_allele_count
        ext.args_mindp     = params.minimum_genotype_depth
        ext.args_maxdp     = params.maximum_genotype_depth
        ext.args_indvfmiss = params.minimum_indv_fraction_missing
        publishDir = [
            [
                path: { "${params.outdir}/RADSEQ_FILTER1" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*"
            ]
        ]
    }
    withName: RADSEQ_FILTERS_2 {
        ext.args_fmiss     = params.fraction_genotypes_missing
        ext.args_mac       = params.minor_allele_count
        ext.args_mindp     = params.minimum_genotype_depth
        ext.args_maxdp     = params.maximum_genotype_depth
        publishDir = [
            [
                path: { "${params.outdir}/RADSEQ_FILTER2" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*.vcf.gz"
            ]
        ]
    }
}